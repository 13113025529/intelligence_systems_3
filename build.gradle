
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath ("io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE")
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.13.1"
}

group 'io.mifos.tools'
version '0.1.0-BUILD-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
}

ext.versions = [
        spring        : '4.3.2.RELEASE',
        springsecurity: '4.0.2.RELEASE',
        logback       : '1.1.3',
        slf4j         : '1.7.13',
        findbugs      : '3.0.1',
        junit         : '4.12',
        springtest    : '4.3.2.RELEASE'
]

configurations {
    compile.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    compile(
            [group: 'org.springframework', name: 'spring-context', version: versions.spring],
            [group: 'org.springframework.security', name: 'spring-security-core', version: versions.springsecurity],
            [group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j],
            [group: 'com.google.code.findbugs', name: 'jsr305', version: versions.findbugs]
    )
    testCompile(
            [group: 'junit', name: 'junit', version: versions.junit],
            [group: 'org.springframework', name: 'spring-test', version: versions.springtest]
    )
}

license {
    header rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'The Mifos Initiative'
}

publishing {
    publications {
        babel(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}